generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String @id @default(uuid())
  brand       String
  name        String
  sex         String
  price       Int
  photo       String
  description String @db.VarChar(800)
  sizes       String

  orders ProductOnOrder[]
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password Password? // password is optional as it can be added later
  name     String
  address  String

  //orders Order[]
}

model Password {
  id             String @id @default(uuid())
  hashedPassword String
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String @unique
}

// For now Users will not be created, user data for order will be provided as userData
model Order {
  id         String @id @default(uuid())
  //userId String
  name       String
  email      String
  address    String
  orderTotal Int

  createdAt DateTime @default(now())

  //user     User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  Products ProductOnOrder[]
  //User     User?            @relation(fields: [userId], references: [id])
  //userId   String?
  //User     User?            @relation(fields: [userId], references: [id])
  //userId   String?
}

model ProductOnOrder {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  Product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
  comment   String?

  @@id([orderId, productId])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime
}
