"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Button_1 = require("../../../../common/Button/Button");
const CheckoutFrom_module_css_1 = require("./CheckoutFrom.module.css");
const CheckoutForm = ({ name, setName, email, setEmail, shippingStreet, setShippingStreet, shippingCity, setShippingCity, shippingZip, setShippingZip, orderSubmitHandler, }) => {
    const [isChecked, setIsChecked] = (0, react_1.useState)(false);
    return ((0, jsx_runtime_1.jsxs)("section", { className: CheckoutFrom_module_css_1.default.checkoutFormWrapper, children: [(0, jsx_runtime_1.jsx)("h1", { className: CheckoutFrom_module_css_1.default.sectionTitle, children: "Shipping Data" }), (0, jsx_runtime_1.jsxs)("form", { className: CheckoutFrom_module_css_1.default.userDataForm, onSubmit: orderSubmitHandler, children: [(0, jsx_runtime_1.jsxs)("div", { className: CheckoutFrom_module_css_1.default.userDataFormCheckbox, children: [(0, jsx_runtime_1.jsx)("input", { type: "checkbox", checked: isChecked, onChange: () => setIsChecked(!isChecked), id: "customAddressCheckbox", name: "customAddressCheckbox" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "customAddressCheckbox", children: "Ship to a different address" })] }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "name", children: "First and last name*" }), (0, jsx_runtime_1.jsx)("input", { type: "text", name: "name", id: "name", required: true, value: name, onChange: (e) => setName(e.target.value), disabled: !isChecked, className: "user-input" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "email", children: "Email address*" }), (0, jsx_runtime_1.jsx)("input", { type: "email", name: "email", id: "email", required: true, value: email, onChange: (e) => setEmail(e.target.value), disabled: !isChecked, className: "user-input" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "shippingStreet", children: "Shipping Street*" }), (0, jsx_runtime_1.jsx)("input", { name: "shippingStreet", id: "shippingStreet", required: true, value: shippingStreet, onChange: (e) => setShippingStreet(e.target.value), disabled: !isChecked, className: "user-input" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "shippingCity", children: "Shipping City*" }), (0, jsx_runtime_1.jsx)("input", { name: "shippingCity", id: "shippingCity", required: true, value: shippingCity, onChange: (e) => setShippingCity(e.target.value), disabled: !isChecked, className: "user-input" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "shippingZip", children: "Shipping Zip*" }), (0, jsx_runtime_1.jsx)("input", { name: "shippingZip", id: "shippingZip", required: true, value: shippingZip, onChange: (e) => setShippingZip(e.target.value), disabled: !isChecked, className: "user-input" }), (0, jsx_runtime_1.jsx)(Button_1.default, { buttonText: "Place Order" })] })] }));
};
exports.default = CheckoutForm;
//# sourceMappingURL=CheckoutForm.js.map